version: '3.5'

services:
  api:
    container_name: restful_api
    build:
       context: .
       dockerfile: ./docker/api/Dockerfile
    depends_on:
      - mysql
      - redis
    ports:      # 外部端口:docker内部端口
      - "8000:8000"
    environment:
      DEBUG: "${DEBUG}"
      ENVIRONMENT: "${ENVIRONMENT}"
    env_file:
      - .env
    volumes:    # 挂载盘: - 主机路径:docker内部路径
      - .:/app     # 把主机下的src目录挂在到docker下, 实现边开发, 边调试
      - ./data:/data
    # entrypoint: sh      # 用于调试
    entrypoint: sh -c 'if [ -n "$ENTRYPOINT" ]; then echo "exec $ENTRYPOINT"; exec $ENTRYPOINT; else exec /app/bin/web.sh; fi'
    #command: dockerize -wait tcp://mysql:3306 -timeout 10s
    tty: true
    restart: unless-stopped
    networks:
      - pppoe_system


  timer_processor:
    container_name: timer_processor
    build:
       context: .
       dockerfile: ./docker/api/Dockerfile
    depends_on:
      - mysql
      - redis
    environment:
      DEBUG: "False"
      ENVIRONMENT: "production"
    env_file:
      - .env
    volumes:
      - .:/app
      - ./data:/data
    entrypoint: python src/manage.py timer_processor
    tty: true
    restart: unless-stopped
    networks:
      - pppoe_system


  redis:
    container_name: restful_server_redis
    image: redis:alpine
    volumes:    # 挂载盘: - 主机路径:docker内部路径
      - ./data/redisdata:/data
    restart: unless-stopped
    entrypoint: redis-server --appendonly yes
    networks:
      - pppoe_system


  mysql:
    container_name: restful_server_mysql
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'trade'
    ports:
      - "33333:3306"
    #user: mysql
    #privileged: true   # 拥有主机的root权限
    volumes:
      - ./data/etc/mysql/my.cnf:/etc/mysql/my.cnf
    restart: unless-stopped
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --default-time-zone=+08:00
    networks:
      - pppoe_system


networks:
  pppoe_system:
    name: pppoe_system_network_name
