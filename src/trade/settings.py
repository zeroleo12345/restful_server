"""
Django settings for trade project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import datetime
import uuid
# 第三方库
import pymysql
from dynaconf import settings
import dj_database_url
import sentry_sdk
from sentry_sdk.integrations.logging import ignore_logger
from sentry_sdk.integrations.django import DjangoIntegration
# 项目库
from utils.logger import log
from utils.signal import SigTerm
SigTerm.register()


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = settings.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = settings.get('DEBUG', default=0, cast='@bool')


class ENV(object):
    """ 可选值:
        - dev
        - production
        - staging
        - qa
    """
    environment = settings.get('ENVIRONMENT', default='production')

    @classmethod
    def is_production(cls):
        return cls.environment == 'production' or cls.environment == 'staging'

    @classmethod
    def is_qa(cls):
        return cls.environment == 'qa'

    @classmethod
    def is_unittest(cls):
        return cls.environment == 'unittest'


ALLOWED_HOSTS = list(filter(None, settings.get('ALLOWED_HOSTS', default='*').split(',')))   # 127.0.0.1,.example.cn 匹配域名和子域名

# Application definition
# 'django.contrib.admin',
# 'django.contrib.auth',
# 'django.contrib.contenttypes',
# 'django.contrib.sessions',
# 'django.contrib.messages',
# 'django.contrib.staticfiles',
INSTALLED_APPS = [
    # 中间件
    'corsheaders',
    'rest_framework',
    # 模型
    'trade',
    # 独立程序
    'timer_processor',
]
# AUTH_USER_MODEL = 'trade.Seller'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'trade.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        # 'OPTIONS': {
        #     'context_processors': [
        #         'django.template.context_processors.debug',
        #         'django.template.context_processors.request',
        #         'django.contrib.auth.context_processors.auth',            # 不需要
        #         'django.contrib.messages.context_processors.messages',    # 不需要
        #     ],
        # },
    },
]

#
WSGI_APPLICATION = 'trade.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
pymysql.install_as_MySQLdb()
DATABASE_ROUTERS = ['framework.database.DatabaseAppsRouter']
DATABASES = {
    'default': {
        # {'NAME': 'trade', 'USER': 'root', 'PASSWORD': 'root', 'HOST': 'mysql', 'PORT': '', 'CONN_MAX_AGE': 0, 'ENGINE': 'django.db.backends.mysql'}
        **dj_database_url.parse(settings.get('DATABASE_URI')),
        **{'TIME_ZONE': 'Asia/Shanghai'},
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_AUTO_CREATE_USER,ERROR_FOR_DIVISION_BY_ZERO'",   # workaround:   https://django-mysql.readthedocs.io/en/latest/checks.html
            'charset': 'utf8mb4',   # 手动建库语句: CREATE DATABASE db1 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
        },
    },
}
DATABASE_APPS_MAPPING = {
    # 'app_name':'database_name',
    'trade': 'default',
}
REDIS_MAX_CONNECTIONS = settings.get('REDIS_MAX_CONNECTIONS', default=100, cast='@int')
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': settings.get('REDIS_URI'),
        'OPTIONS': {
            'CONNECTION_POOL_CLASS': 'framework.database.MyBlockingConnectionPool',
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'SOCKET_TIMEOUT': 3,
            'SOCKET_CONNECT_TIMEOUT': 3,
            'CONNECTION_POOL_KWARGS': {
                'decode_responses': True,       # workaround:   https://www.jianshu.com/p/91678ee7b634
                'max_connections': REDIS_MAX_CONNECTIONS,
                'timeout': 5,
            },
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'framework.restful.custom_exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'framework.authorization.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    # 'DEFAULT_RENDERER_CLASSES': (
    #     'framework.restful.MyJSONRenderer',
    # ),
    # 'DEFAULT_PAGINATION_CLASS': 'framework.restful.MyPageNumberPagination',
    'UNAUTHENTICATED_USER': None,   # https://github.com/encode/django-rest-framework/issues/3262
}

# CORS 跨域配置:    https://github.com/adamchainz/django-cors-headers
CORS_ORIGIN_ALLOW_ALL = settings.get('CORS_ORIGIN_ALLOW_ALL', default=True, cast='@bool')
CORS_ALLOW_CREDENTIALS = False
CORS_ORIGIN_WHITELIST = list(filter(None, settings.get('CORS_ORIGIN_WHITELIST', default='').split(',')))     # "https://example.com"
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
]
CORS_ALLOW_HEADERS = [
    'Content-Type',
    'Origin',
    'Authorization'
]
CORS_EXPOSE_HEADERS = [
    'Content-Type',
    'Origin',
    'Authorization'
]
CORS_PREFLIGHT_MAX_AGE = 1800

#
JWT_EXPIRATION_DELTA = settings.get('JWT_EXPIRATION_DELTA', default=600, cast='@int')
JWT_SECRET_KEY = settings.get('JWT_SECRET_KEY', default=SECRET_KEY)
JWT_AUTH = {
    'JWT_SECRET_KEY': JWT_SECRET_KEY,
    'JWT_GET_USER_SECRET_KEY': None,
    'JWT_PUBLIC_KEY': None,
    'JWT_PRIVATE_KEY': None,
    'JWT_ALGORITHM': 'HS256',
    'JWT_VERIFY': True,
    # 'JWT_VERIFY_EXPIRATION': True,
    'JWT_LEEWAY': 0,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=JWT_EXPIRATION_DELTA),
    'JWT_AUDIENCE': None,
    'JWT_ISSUER': None,

    'JWT_ALLOW_REFRESH': False,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),

    'JWT_AUTH_HEADER_PREFIX': 'JWT',
    'JWT_AUTH_COOKIE': None,
}


SILENCED_SYSTEM_CHECKS = [
    'urls.W002',    # (urls.W002) Your URL pattern '/draft' has a route beginning with a '/'. Remove this slash as it is unnecessary
]

SENTRY_DSN = settings.get('SENTRY_DSN', default='')
sentry_sdk.init(
    dsn=SENTRY_DSN,
    environment=ENV.environment,
    integrations=[DjangoIntegration()]
)

# 打印 ORM sql
PRINT_SQL = settings.get('PRINT_SQL', default=0, cast='@bool')
if DEBUG and PRINT_SQL:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'filters': {
            'require_debug_true': {
                '()': 'django.utils.log.RequireDebugTrue',
            },
        },
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'loggers': {
            'django.db.backends': {
                'handlers': ['console'],
                'level': 'DEBUG',
            },
        },
    }

#
POD_UID = settings.get('POD_UID', default=uuid.uuid4().hex)
# 日志
LOG_DIR = settings.get('LOG_DIR')   # /app/data/log/
LOG_LEVEL = settings.get('LOG_LEVEL', default='debug')
LOG_TOGGLE_FILE_HANDLER = settings.get('LOG_TOGGLE_FILE_HANDLER', default=0, cast='@bool')
#
log.set_header('restful')
log.set_directory(LOG_DIR)
log.set_level(LOG_LEVEL)
log.set_buffer(0)
log.toggle_file_handler(toggle=LOG_TOGGLE_FILE_HANDLER)
#
ignore_logger(log._logger.name)     # 不忽略的话, log.e会上报消息到sentry

# 微信公众平台配置
MP_APP_ID = settings.get('MP_APP_ID')             # 开发者ID
MP_APP_SECRET = settings.get('MP_APP_SECRET')     # 开发者密码
MP_TOKEN = settings.get('MP_TOKEN')               # 令牌
MP_AES_KEY = settings.get('MP_AES_KEY')           # 消息加解密密钥
MP_REDIRECT_URI = settings.get('MP_REDIRECT_URI')           # 如: http://www.xxx.cn/notify
# 微信支付其他配置
MP_PAY_SANDBOX = settings.get('MP_PAY_SANDBOX', default=0, cast='@bool')
MP_PAY_NOTIFY_URL = settings.get('MP_PAY_NOTIFY_URL')         # 微信支付结果通知回调地址:   https://api.xxx.cn/order/notify
PAY_ECS_IP = settings.get('PAY_ECS_IP', default='127.0.0.1')
# 微信商户平台配置
MP_MERCHANT_ID = settings.get('MP_MERCHANT_ID')   # 商户号
MP_APP_KEY = settings.get('MP_APP_KEY')           # API密钥
MP_MERCHANT_CERT = settings.get('MP_MERCHANT_CERT', default=None)         # 可选. 商户证书路径 (平台上下载). 申请退款,拉取订单评价数据,下载资金账单接口需证书
MP_MERCHANT_KEY = settings.get('MP_MERCHANT_KEY', default=None)           # 可选. 商户证书私钥路径 (平台上下载).
MP_SUB_MERCHANT_ID = settings.get('MP_SUB_MERCHANT_ID', default=None)     # 可选(一般不需填). 子商户号, 受理模式下需填

# 公众号下测试管理员的openid. (付款只需0.01)
MP_ADMIN_OPENID = settings.get('MP_ADMIN_OPENID')

# # 公众号客服
# MP_KF_ACCOUNT = settings.get('MP_KF_ACCOUNT')
# MP_KF_NICKNAME = settings.get('MP_KF_NICKNAME')
# MP_KF_PASSWORD = settings.get('MP_KF_PASSWORD')
MP_DEFAULT_REPLY = settings.get('MP_DEFAULT_REPLY', default='宽带接入教程请点击按钮<使用教程>, 有问题可联系管理员')

#
TUTORIAL_URL = settings.get('TUTORIAL_URL', default='http://ca1145e4.wiz03.com/share/s/3a4knA3wo4e92gDVx03U7UoV0JuqNU0z3kT629VCU40BeXq6')
